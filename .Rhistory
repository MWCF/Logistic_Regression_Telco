# dataset from kaggle - transformed - data source https://www.kaggle.com/vhcg77/telcom-churns-dataset
# dataset is transformed and divided into Test and Train data.
Churn_data <- read.csv("C:/Users/wai_f/Documents/Raw_Data_Telco.csv")
View(Churn_data)
View(Churn_data)
Churn_data$Churn <- as.factor(Churn_data$Churn) # convert result into factor
str(Churn_data) #Check structure
# rename the predictor variable so the glm model will work with caret
library(caret)
levels(Churn_data$Churn) <- make.names(levels(factor(Churn_data$Churn)))
levels(Churn_data$Churn)
#split data into train and test data
split <- createDataPartition(Churn_data$Churn, p = .75, list = FALSE)
set.seed(101)
train_set <- Churn_data[split]
test_set <- Churn_data[-split]
#scale numeric data
Churn_data$tenure <- scale(Churn_data$tenure)
Churn_data$MonthlyCharges <-scale(Churn_data$MonthlyCharges)
Churn_data$InternetService <-scale(Churn_data$InternetService)
#split data into train and test data
split <- createDataPartition(Churn_data$Churn, p = .75, list = FALSE)
set.seed(101)
train_set <- Churn_data[split]
test_set <- Churn_data[-split]
train_control <- trainControl(method = "cv", number = 10, savePredictions = TRUE, classProbs = TRUE, sampling = "up", summaryFunction = twoClassSummary)
fit <- train(Churn~., data=Churn_data, trControl=train_control, method="glm", family = binomial, metric="ROC")
#split data into train and test data
smp_size <- floor(0.75 * nrow(Churn_data))
set.seed(110)
train_ind <- sample(seq_len(nrow(Churn_data)), size = smp_size)
train <-Churn_data[train_ind,]
test <-Churn_data[-train_ind]
View(train_control)
View(test)
test <-Churn_data[-train_ind,]
fit <- train(Churn~., data=train, trControl=train_control, method="glm", family = binomial, metric="ROC")
# run test data through model and predict
pred = predict(fit, type = 'raw', newdata = test[, 1:25])
# look at predictions
pred
# combine prediction with data
pred_data<-data.frame(pred)
result<-cbind(pred_data,test)
View(result)
# check results with confusion matrix
library(e1071)
View(result)
confusionMatrix<- confusionMatrix(result$pred,result$Churn, positive = "X1")
confusionMatrix
View(train)
library(ggplot2)
install.packages("corrplot")
# Check Correlation
M<-corr(train)
library (corrplot)
M<-corr(train)
M<-cor(train)
View(train)
# Check Correlation
train_corr<-train[,-c(1)]
View(train_corr)
M<-corr(train_corr)
M<-cor(train_corr)
corrplot(M, method = "number")
# dataset from kaggle - transformed - data source https://www.kaggle.com/vhcg77/telcom-churns-dataset
# dataset is transformed and divided into Test and Train data.
Churn_data <- read.csv("D:/Telco_revised_data_1.csv") #import transformed data
View(Churn_data)
Corr_data<-Churn_data[,-c(1)]
str(Corr_data)
library(corrplot)
m<-cor(Corr_data)
corrplot(m, method = "numeric")
View(train)
Corr_data<-Churn_data[,-c(1)]
str(train)
corrplot(m, method = "number")
Corr_data<-Churn_data2[,-c(1)]
Corr_data<-Churn_data2[,-c(1)]
Corr_data<- Churn_data2[,-c(1)]
View(Churn_data2)
View(Churn_data2)
View(Churn_data2)
View(Churn_data2)
View(Churn_data2)
# dataset from kaggle - transformed - data source https://www.kaggle.com/vhcg77/telcom-churns-dataset
# dataset is transformed and divided into Test and Train data.
Churn_data2 <- read.csv("D:/Telco_revised_data_2.csv") #import transformed data
View(Churn_data2)
